// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Protoc {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class Main {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Protoc_PbPkg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protoc.PbPkg, global::Protoc.PbPkg.Builder> internal__static_Protoc_PbPkg__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protoc_S2C_UPDATE_PLAYER__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protoc.S2C_UPDATE_PLAYER, global::Protoc.S2C_UPDATE_PLAYER.Builder> internal__static_Protoc_S2C_UPDATE_PLAYER__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protoc_S2C_UPDATE_ENTITY__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protoc.S2C_UPDATE_ENTITY, global::Protoc.S2C_UPDATE_ENTITY.Builder> internal__static_Protoc_S2C_UPDATE_ENTITY__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protoc_S2C_CommonAPI__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protoc.S2C_CommonAPI, global::Protoc.S2C_CommonAPI.Builder> internal__static_Protoc_S2C_CommonAPI__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protoc_C2S_UPDATE_PLAYER__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protoc.C2S_UPDATE_PLAYER, global::Protoc.C2S_UPDATE_PLAYER.Builder> internal__static_Protoc_C2S_UPDATE_PLAYER__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protoc_C2S_UPDATE_ENTITY__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protoc.C2S_UPDATE_ENTITY, global::Protoc.C2S_UPDATE_ENTITY.Builder> internal__static_Protoc_C2S_UPDATE_ENTITY__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Protoc_C2S_CommonAPI__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Protoc.C2S_CommonAPI, global::Protoc.C2S_CommonAPI.Builder> internal__static_Protoc_C2S_CommonAPI__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Main() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CgptYWluLnByb3RvEgZQcm90b2MiIQoFUGJQa2cSCgoCaWQYASACKAUSDAoE" + 
          "ZGF0YRgCIAIoDCJRChFTMkNfVVBEQVRFX1BMQVlFUhIKCgJpZBgBIAIoCRIM" + 
          "CgRuYW1lGAIgAigJEgoKAmx2GAMgAigFEgoKAmhwGAQgAigFEgoKAm1wGAUg" + 
          "AigFInAKEVMyQ19VUERBVEVfRU5USVRZEgoKAmlkGAEgAigFEgkKAXgYAiAC" + 
          "KAUSCQoBeRgDIAIoBRIJCgF6GAQgAigFEgwKBGZhY2UYBSACKAUSDgoGc3Rh" + 
          "dHVzGAYgAigFEhAKCGlzUGxheWVyGAcgAigIIioKDVMyQ19Db21tb25BUEkS" + 
          "CwoDYXBpGAEgAigJEgwKBGFyZ3MYAiACKAkiNwoRQzJTX1VQREFURV9QTEFZ" + 
          "RVISCgoCaWQYASACKAkSCgoCaHAYBCACKAUSCgoCbXAYBSACKAUiQAoRQzJT" + 
          "X1VQREFURV9FTlRJVFkSCgoCaWQYASACKAUSCQoBeBgCIAIoBRIJCgF5GAMg" + 
          "AigFEgkKAXoYBCACKAUiKgoNQzJTX0NvbW1vbkFQSRILCgNhcGkYASACKAkS" + 
          "DAoEYXJncxgCIAIoCQ==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Protoc_PbPkg__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Protoc_PbPkg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protoc.PbPkg, global::Protoc.PbPkg.Builder>(internal__static_Protoc_PbPkg__Descriptor,
                new string[] { "Id", "Data", });
        internal__static_Protoc_S2C_UPDATE_PLAYER__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Protoc_S2C_UPDATE_PLAYER__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protoc.S2C_UPDATE_PLAYER, global::Protoc.S2C_UPDATE_PLAYER.Builder>(internal__static_Protoc_S2C_UPDATE_PLAYER__Descriptor,
                new string[] { "Id", "Name", "Lv", "Hp", "Mp", });
        internal__static_Protoc_S2C_UPDATE_ENTITY__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Protoc_S2C_UPDATE_ENTITY__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protoc.S2C_UPDATE_ENTITY, global::Protoc.S2C_UPDATE_ENTITY.Builder>(internal__static_Protoc_S2C_UPDATE_ENTITY__Descriptor,
                new string[] { "Id", "X", "Y", "Z", "Face", "Status", "IsPlayer", });
        internal__static_Protoc_S2C_CommonAPI__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Protoc_S2C_CommonAPI__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protoc.S2C_CommonAPI, global::Protoc.S2C_CommonAPI.Builder>(internal__static_Protoc_S2C_CommonAPI__Descriptor,
                new string[] { "Api", "Args", });
        internal__static_Protoc_C2S_UPDATE_PLAYER__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Protoc_C2S_UPDATE_PLAYER__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protoc.C2S_UPDATE_PLAYER, global::Protoc.C2S_UPDATE_PLAYER.Builder>(internal__static_Protoc_C2S_UPDATE_PLAYER__Descriptor,
                new string[] { "Id", "Hp", "Mp", });
        internal__static_Protoc_C2S_UPDATE_ENTITY__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Protoc_C2S_UPDATE_ENTITY__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protoc.C2S_UPDATE_ENTITY, global::Protoc.C2S_UPDATE_ENTITY.Builder>(internal__static_Protoc_C2S_UPDATE_ENTITY__Descriptor,
                new string[] { "Id", "X", "Y", "Z", });
        internal__static_Protoc_C2S_CommonAPI__Descriptor = Descriptor.MessageTypes[6];
        internal__static_Protoc_C2S_CommonAPI__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Protoc.C2S_CommonAPI, global::Protoc.C2S_CommonAPI.Builder>(internal__static_Protoc_C2S_CommonAPI__Descriptor,
                new string[] { "Api", "Args", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PbPkg : pb::GeneratedMessage<PbPkg, PbPkg.Builder> {
    private PbPkg() { }
    private static readonly PbPkg defaultInstance = new PbPkg().MakeReadOnly();
    private static readonly string[] _pbPkgFieldNames = new string[] { "data", "id" };
    private static readonly uint[] _pbPkgFieldTags = new uint[] { 18, 8 };
    public static PbPkg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PbPkg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PbPkg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protoc.Main.internal__static_Protoc_PbPkg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PbPkg, PbPkg.Builder> InternalFieldAccessors {
      get { return global::Protoc.Main.internal__static_Protoc_PbPkg__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int DataFieldNumber = 2;
    private bool hasData;
    private pb::ByteString data_ = pb::ByteString.Empty;
    public bool HasData {
      get { return hasData; }
    }
    public pb::ByteString Data {
      get { return data_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasData) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _pbPkgFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[1], Id);
      }
      if (hasData) {
        output.WriteBytes(2, field_names[0], Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasData) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Data);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PbPkg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PbPkg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PbPkg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PbPkg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PbPkg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PbPkg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PbPkg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PbPkg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PbPkg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PbPkg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PbPkg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PbPkg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PbPkg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PbPkg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PbPkg result;
      
      private PbPkg PrepareBuilder() {
        if (resultIsReadOnly) {
          PbPkg original = result;
          result = new PbPkg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PbPkg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protoc.PbPkg.Descriptor; }
      }
      
      public override PbPkg DefaultInstanceForType {
        get { return global::Protoc.PbPkg.DefaultInstance; }
      }
      
      public override PbPkg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PbPkg) {
          return MergeFrom((PbPkg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PbPkg other) {
        if (other == global::Protoc.PbPkg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasData) {
          Data = other.Data;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_pbPkgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _pbPkgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 18: {
              result.hasData = input.ReadBytes(ref result.data_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasData {
        get { return result.hasData; }
      }
      public pb::ByteString Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = pb::ByteString.Empty;
        return this;
      }
    }
    static PbPkg() {
      object.ReferenceEquals(global::Protoc.Main.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class S2C_UPDATE_PLAYER : pb::GeneratedMessage<S2C_UPDATE_PLAYER, S2C_UPDATE_PLAYER.Builder> {
    private S2C_UPDATE_PLAYER() { }
    private static readonly S2C_UPDATE_PLAYER defaultInstance = new S2C_UPDATE_PLAYER().MakeReadOnly();
    private static readonly string[] _s2CUPDATEPLAYERFieldNames = new string[] { "hp", "id", "lv", "mp", "name" };
    private static readonly uint[] _s2CUPDATEPLAYERFieldTags = new uint[] { 32, 10, 24, 40, 18 };
    public static S2C_UPDATE_PLAYER DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override S2C_UPDATE_PLAYER DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override S2C_UPDATE_PLAYER ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protoc.Main.internal__static_Protoc_S2C_UPDATE_PLAYER__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<S2C_UPDATE_PLAYER, S2C_UPDATE_PLAYER.Builder> InternalFieldAccessors {
      get { return global::Protoc.Main.internal__static_Protoc_S2C_UPDATE_PLAYER__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int LvFieldNumber = 3;
    private bool hasLv;
    private int lv_;
    public bool HasLv {
      get { return hasLv; }
    }
    public int Lv {
      get { return lv_; }
    }
    
    public const int HpFieldNumber = 4;
    private bool hasHp;
    private int hp_;
    public bool HasHp {
      get { return hasHp; }
    }
    public int Hp {
      get { return hp_; }
    }
    
    public const int MpFieldNumber = 5;
    private bool hasMp;
    private int mp_;
    public bool HasMp {
      get { return hasMp; }
    }
    public int Mp {
      get { return mp_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasName) return false;
        if (!hasLv) return false;
        if (!hasHp) return false;
        if (!hasMp) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _s2CUPDATEPLAYERFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[1], Id);
      }
      if (hasName) {
        output.WriteString(2, field_names[4], Name);
      }
      if (hasLv) {
        output.WriteInt32(3, field_names[2], Lv);
      }
      if (hasHp) {
        output.WriteInt32(4, field_names[0], Hp);
      }
      if (hasMp) {
        output.WriteInt32(5, field_names[3], Mp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Id);
        }
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Name);
        }
        if (hasLv) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Lv);
        }
        if (hasHp) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Hp);
        }
        if (hasMp) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Mp);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static S2C_UPDATE_PLAYER ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C_UPDATE_PLAYER ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C_UPDATE_PLAYER ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C_UPDATE_PLAYER ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C_UPDATE_PLAYER ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C_UPDATE_PLAYER ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static S2C_UPDATE_PLAYER ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static S2C_UPDATE_PLAYER ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static S2C_UPDATE_PLAYER ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C_UPDATE_PLAYER ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private S2C_UPDATE_PLAYER MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(S2C_UPDATE_PLAYER prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<S2C_UPDATE_PLAYER, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(S2C_UPDATE_PLAYER cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private S2C_UPDATE_PLAYER result;
      
      private S2C_UPDATE_PLAYER PrepareBuilder() {
        if (resultIsReadOnly) {
          S2C_UPDATE_PLAYER original = result;
          result = new S2C_UPDATE_PLAYER();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override S2C_UPDATE_PLAYER MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protoc.S2C_UPDATE_PLAYER.Descriptor; }
      }
      
      public override S2C_UPDATE_PLAYER DefaultInstanceForType {
        get { return global::Protoc.S2C_UPDATE_PLAYER.DefaultInstance; }
      }
      
      public override S2C_UPDATE_PLAYER BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is S2C_UPDATE_PLAYER) {
          return MergeFrom((S2C_UPDATE_PLAYER) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(S2C_UPDATE_PLAYER other) {
        if (other == global::Protoc.S2C_UPDATE_PLAYER.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasLv) {
          Lv = other.Lv;
        }
        if (other.HasHp) {
          Hp = other.Hp;
        }
        if (other.HasMp) {
          Mp = other.Mp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_s2CUPDATEPLAYERFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _s2CUPDATEPLAYERFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 18: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 24: {
              result.hasLv = input.ReadInt32(ref result.lv_);
              break;
            }
            case 32: {
              result.hasHp = input.ReadInt32(ref result.hp_);
              break;
            }
            case 40: {
              result.hasMp = input.ReadInt32(ref result.mp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasLv {
        get { return result.hasLv; }
      }
      public int Lv {
        get { return result.Lv; }
        set { SetLv(value); }
      }
      public Builder SetLv(int value) {
        PrepareBuilder();
        result.hasLv = true;
        result.lv_ = value;
        return this;
      }
      public Builder ClearLv() {
        PrepareBuilder();
        result.hasLv = false;
        result.lv_ = 0;
        return this;
      }
      
      public bool HasHp {
        get { return result.hasHp; }
      }
      public int Hp {
        get { return result.Hp; }
        set { SetHp(value); }
      }
      public Builder SetHp(int value) {
        PrepareBuilder();
        result.hasHp = true;
        result.hp_ = value;
        return this;
      }
      public Builder ClearHp() {
        PrepareBuilder();
        result.hasHp = false;
        result.hp_ = 0;
        return this;
      }
      
      public bool HasMp {
        get { return result.hasMp; }
      }
      public int Mp {
        get { return result.Mp; }
        set { SetMp(value); }
      }
      public Builder SetMp(int value) {
        PrepareBuilder();
        result.hasMp = true;
        result.mp_ = value;
        return this;
      }
      public Builder ClearMp() {
        PrepareBuilder();
        result.hasMp = false;
        result.mp_ = 0;
        return this;
      }
    }
    static S2C_UPDATE_PLAYER() {
      object.ReferenceEquals(global::Protoc.Main.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class S2C_UPDATE_ENTITY : pb::GeneratedMessage<S2C_UPDATE_ENTITY, S2C_UPDATE_ENTITY.Builder> {
    private S2C_UPDATE_ENTITY() { }
    private static readonly S2C_UPDATE_ENTITY defaultInstance = new S2C_UPDATE_ENTITY().MakeReadOnly();
    private static readonly string[] _s2CUPDATEENTITYFieldNames = new string[] { "face", "id", "isPlayer", "status", "x", "y", "z" };
    private static readonly uint[] _s2CUPDATEENTITYFieldTags = new uint[] { 40, 8, 56, 48, 16, 24, 32 };
    public static S2C_UPDATE_ENTITY DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override S2C_UPDATE_ENTITY DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override S2C_UPDATE_ENTITY ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protoc.Main.internal__static_Protoc_S2C_UPDATE_ENTITY__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<S2C_UPDATE_ENTITY, S2C_UPDATE_ENTITY.Builder> InternalFieldAccessors {
      get { return global::Protoc.Main.internal__static_Protoc_S2C_UPDATE_ENTITY__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int XFieldNumber = 2;
    private bool hasX;
    private int x_;
    public bool HasX {
      get { return hasX; }
    }
    public int X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 3;
    private bool hasY;
    private int y_;
    public bool HasY {
      get { return hasY; }
    }
    public int Y {
      get { return y_; }
    }
    
    public const int ZFieldNumber = 4;
    private bool hasZ;
    private int z_;
    public bool HasZ {
      get { return hasZ; }
    }
    public int Z {
      get { return z_; }
    }
    
    public const int FaceFieldNumber = 5;
    private bool hasFace;
    private int face_;
    public bool HasFace {
      get { return hasFace; }
    }
    public int Face {
      get { return face_; }
    }
    
    public const int StatusFieldNumber = 6;
    private bool hasStatus;
    private int status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public int Status {
      get { return status_; }
    }
    
    public const int IsPlayerFieldNumber = 7;
    private bool hasIsPlayer;
    private bool isPlayer_;
    public bool HasIsPlayer {
      get { return hasIsPlayer; }
    }
    public bool IsPlayer {
      get { return isPlayer_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasX) return false;
        if (!hasY) return false;
        if (!hasZ) return false;
        if (!hasFace) return false;
        if (!hasStatus) return false;
        if (!hasIsPlayer) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _s2CUPDATEENTITYFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[1], Id);
      }
      if (hasX) {
        output.WriteInt32(2, field_names[4], X);
      }
      if (hasY) {
        output.WriteInt32(3, field_names[5], Y);
      }
      if (hasZ) {
        output.WriteInt32(4, field_names[6], Z);
      }
      if (hasFace) {
        output.WriteInt32(5, field_names[0], Face);
      }
      if (hasStatus) {
        output.WriteInt32(6, field_names[3], Status);
      }
      if (hasIsPlayer) {
        output.WriteBool(7, field_names[2], IsPlayer);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasX) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, X);
        }
        if (hasY) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Y);
        }
        if (hasZ) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Z);
        }
        if (hasFace) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Face);
        }
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, Status);
        }
        if (hasIsPlayer) {
          size += pb::CodedOutputStream.ComputeBoolSize(7, IsPlayer);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static S2C_UPDATE_ENTITY ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C_UPDATE_ENTITY ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C_UPDATE_ENTITY ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C_UPDATE_ENTITY ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C_UPDATE_ENTITY ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C_UPDATE_ENTITY ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static S2C_UPDATE_ENTITY ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static S2C_UPDATE_ENTITY ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static S2C_UPDATE_ENTITY ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C_UPDATE_ENTITY ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private S2C_UPDATE_ENTITY MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(S2C_UPDATE_ENTITY prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<S2C_UPDATE_ENTITY, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(S2C_UPDATE_ENTITY cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private S2C_UPDATE_ENTITY result;
      
      private S2C_UPDATE_ENTITY PrepareBuilder() {
        if (resultIsReadOnly) {
          S2C_UPDATE_ENTITY original = result;
          result = new S2C_UPDATE_ENTITY();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override S2C_UPDATE_ENTITY MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protoc.S2C_UPDATE_ENTITY.Descriptor; }
      }
      
      public override S2C_UPDATE_ENTITY DefaultInstanceForType {
        get { return global::Protoc.S2C_UPDATE_ENTITY.DefaultInstance; }
      }
      
      public override S2C_UPDATE_ENTITY BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is S2C_UPDATE_ENTITY) {
          return MergeFrom((S2C_UPDATE_ENTITY) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(S2C_UPDATE_ENTITY other) {
        if (other == global::Protoc.S2C_UPDATE_ENTITY.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        if (other.HasZ) {
          Z = other.Z;
        }
        if (other.HasFace) {
          Face = other.Face;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasIsPlayer) {
          IsPlayer = other.IsPlayer;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_s2CUPDATEENTITYFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _s2CUPDATEENTITYFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 16: {
              result.hasX = input.ReadInt32(ref result.x_);
              break;
            }
            case 24: {
              result.hasY = input.ReadInt32(ref result.y_);
              break;
            }
            case 32: {
              result.hasZ = input.ReadInt32(ref result.z_);
              break;
            }
            case 40: {
              result.hasFace = input.ReadInt32(ref result.face_);
              break;
            }
            case 48: {
              result.hasStatus = input.ReadInt32(ref result.status_);
              break;
            }
            case 56: {
              result.hasIsPlayer = input.ReadBool(ref result.isPlayer_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasX {
        get { return result.hasX; }
      }
      public int X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(int value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public int Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(int value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0;
        return this;
      }
      
      public bool HasZ {
        get { return result.hasZ; }
      }
      public int Z {
        get { return result.Z; }
        set { SetZ(value); }
      }
      public Builder SetZ(int value) {
        PrepareBuilder();
        result.hasZ = true;
        result.z_ = value;
        return this;
      }
      public Builder ClearZ() {
        PrepareBuilder();
        result.hasZ = false;
        result.z_ = 0;
        return this;
      }
      
      public bool HasFace {
        get { return result.hasFace; }
      }
      public int Face {
        get { return result.Face; }
        set { SetFace(value); }
      }
      public Builder SetFace(int value) {
        PrepareBuilder();
        result.hasFace = true;
        result.face_ = value;
        return this;
      }
      public Builder ClearFace() {
        PrepareBuilder();
        result.hasFace = false;
        result.face_ = 0;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public int Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(int value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasIsPlayer {
        get { return result.hasIsPlayer; }
      }
      public bool IsPlayer {
        get { return result.IsPlayer; }
        set { SetIsPlayer(value); }
      }
      public Builder SetIsPlayer(bool value) {
        PrepareBuilder();
        result.hasIsPlayer = true;
        result.isPlayer_ = value;
        return this;
      }
      public Builder ClearIsPlayer() {
        PrepareBuilder();
        result.hasIsPlayer = false;
        result.isPlayer_ = false;
        return this;
      }
    }
    static S2C_UPDATE_ENTITY() {
      object.ReferenceEquals(global::Protoc.Main.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class S2C_CommonAPI : pb::GeneratedMessage<S2C_CommonAPI, S2C_CommonAPI.Builder> {
    private S2C_CommonAPI() { }
    private static readonly S2C_CommonAPI defaultInstance = new S2C_CommonAPI().MakeReadOnly();
    private static readonly string[] _s2CCommonAPIFieldNames = new string[] { "api", "args" };
    private static readonly uint[] _s2CCommonAPIFieldTags = new uint[] { 10, 18 };
    public static S2C_CommonAPI DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override S2C_CommonAPI DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override S2C_CommonAPI ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protoc.Main.internal__static_Protoc_S2C_CommonAPI__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<S2C_CommonAPI, S2C_CommonAPI.Builder> InternalFieldAccessors {
      get { return global::Protoc.Main.internal__static_Protoc_S2C_CommonAPI__FieldAccessorTable; }
    }
    
    public const int ApiFieldNumber = 1;
    private bool hasApi;
    private string api_ = "";
    public bool HasApi {
      get { return hasApi; }
    }
    public string Api {
      get { return api_; }
    }
    
    public const int ArgsFieldNumber = 2;
    private bool hasArgs;
    private string args_ = "";
    public bool HasArgs {
      get { return hasArgs; }
    }
    public string Args {
      get { return args_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasApi) return false;
        if (!hasArgs) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _s2CCommonAPIFieldNames;
      if (hasApi) {
        output.WriteString(1, field_names[0], Api);
      }
      if (hasArgs) {
        output.WriteString(2, field_names[1], Args);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasApi) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Api);
        }
        if (hasArgs) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Args);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static S2C_CommonAPI ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C_CommonAPI ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C_CommonAPI ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static S2C_CommonAPI ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static S2C_CommonAPI ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C_CommonAPI ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static S2C_CommonAPI ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static S2C_CommonAPI ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static S2C_CommonAPI ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static S2C_CommonAPI ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private S2C_CommonAPI MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(S2C_CommonAPI prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<S2C_CommonAPI, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(S2C_CommonAPI cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private S2C_CommonAPI result;
      
      private S2C_CommonAPI PrepareBuilder() {
        if (resultIsReadOnly) {
          S2C_CommonAPI original = result;
          result = new S2C_CommonAPI();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override S2C_CommonAPI MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protoc.S2C_CommonAPI.Descriptor; }
      }
      
      public override S2C_CommonAPI DefaultInstanceForType {
        get { return global::Protoc.S2C_CommonAPI.DefaultInstance; }
      }
      
      public override S2C_CommonAPI BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is S2C_CommonAPI) {
          return MergeFrom((S2C_CommonAPI) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(S2C_CommonAPI other) {
        if (other == global::Protoc.S2C_CommonAPI.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasApi) {
          Api = other.Api;
        }
        if (other.HasArgs) {
          Args = other.Args;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_s2CCommonAPIFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _s2CCommonAPIFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasApi = input.ReadString(ref result.api_);
              break;
            }
            case 18: {
              result.hasArgs = input.ReadString(ref result.args_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasApi {
        get { return result.hasApi; }
      }
      public string Api {
        get { return result.Api; }
        set { SetApi(value); }
      }
      public Builder SetApi(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasApi = true;
        result.api_ = value;
        return this;
      }
      public Builder ClearApi() {
        PrepareBuilder();
        result.hasApi = false;
        result.api_ = "";
        return this;
      }
      
      public bool HasArgs {
        get { return result.hasArgs; }
      }
      public string Args {
        get { return result.Args; }
        set { SetArgs(value); }
      }
      public Builder SetArgs(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasArgs = true;
        result.args_ = value;
        return this;
      }
      public Builder ClearArgs() {
        PrepareBuilder();
        result.hasArgs = false;
        result.args_ = "";
        return this;
      }
    }
    static S2C_CommonAPI() {
      object.ReferenceEquals(global::Protoc.Main.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class C2S_UPDATE_PLAYER : pb::GeneratedMessage<C2S_UPDATE_PLAYER, C2S_UPDATE_PLAYER.Builder> {
    private C2S_UPDATE_PLAYER() { }
    private static readonly C2S_UPDATE_PLAYER defaultInstance = new C2S_UPDATE_PLAYER().MakeReadOnly();
    private static readonly string[] _c2SUPDATEPLAYERFieldNames = new string[] { "hp", "id", "mp" };
    private static readonly uint[] _c2SUPDATEPLAYERFieldTags = new uint[] { 32, 10, 40 };
    public static C2S_UPDATE_PLAYER DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override C2S_UPDATE_PLAYER DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override C2S_UPDATE_PLAYER ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protoc.Main.internal__static_Protoc_C2S_UPDATE_PLAYER__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<C2S_UPDATE_PLAYER, C2S_UPDATE_PLAYER.Builder> InternalFieldAccessors {
      get { return global::Protoc.Main.internal__static_Protoc_C2S_UPDATE_PLAYER__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private string id_ = "";
    public bool HasId {
      get { return hasId; }
    }
    public string Id {
      get { return id_; }
    }
    
    public const int HpFieldNumber = 4;
    private bool hasHp;
    private int hp_;
    public bool HasHp {
      get { return hasHp; }
    }
    public int Hp {
      get { return hp_; }
    }
    
    public const int MpFieldNumber = 5;
    private bool hasMp;
    private int mp_;
    public bool HasMp {
      get { return hasMp; }
    }
    public int Mp {
      get { return mp_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasHp) return false;
        if (!hasMp) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _c2SUPDATEPLAYERFieldNames;
      if (hasId) {
        output.WriteString(1, field_names[1], Id);
      }
      if (hasHp) {
        output.WriteInt32(4, field_names[0], Hp);
      }
      if (hasMp) {
        output.WriteInt32(5, field_names[2], Mp);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Id);
        }
        if (hasHp) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Hp);
        }
        if (hasMp) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Mp);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static C2S_UPDATE_PLAYER ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S_UPDATE_PLAYER ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S_UPDATE_PLAYER ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S_UPDATE_PLAYER ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S_UPDATE_PLAYER ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S_UPDATE_PLAYER ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static C2S_UPDATE_PLAYER ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static C2S_UPDATE_PLAYER ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static C2S_UPDATE_PLAYER ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S_UPDATE_PLAYER ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private C2S_UPDATE_PLAYER MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(C2S_UPDATE_PLAYER prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<C2S_UPDATE_PLAYER, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(C2S_UPDATE_PLAYER cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private C2S_UPDATE_PLAYER result;
      
      private C2S_UPDATE_PLAYER PrepareBuilder() {
        if (resultIsReadOnly) {
          C2S_UPDATE_PLAYER original = result;
          result = new C2S_UPDATE_PLAYER();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override C2S_UPDATE_PLAYER MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protoc.C2S_UPDATE_PLAYER.Descriptor; }
      }
      
      public override C2S_UPDATE_PLAYER DefaultInstanceForType {
        get { return global::Protoc.C2S_UPDATE_PLAYER.DefaultInstance; }
      }
      
      public override C2S_UPDATE_PLAYER BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is C2S_UPDATE_PLAYER) {
          return MergeFrom((C2S_UPDATE_PLAYER) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(C2S_UPDATE_PLAYER other) {
        if (other == global::Protoc.C2S_UPDATE_PLAYER.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasHp) {
          Hp = other.Hp;
        }
        if (other.HasMp) {
          Mp = other.Mp;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_c2SUPDATEPLAYERFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _c2SUPDATEPLAYERFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadString(ref result.id_);
              break;
            }
            case 32: {
              result.hasHp = input.ReadInt32(ref result.hp_);
              break;
            }
            case 40: {
              result.hasMp = input.ReadInt32(ref result.mp_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public string Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = "";
        return this;
      }
      
      public bool HasHp {
        get { return result.hasHp; }
      }
      public int Hp {
        get { return result.Hp; }
        set { SetHp(value); }
      }
      public Builder SetHp(int value) {
        PrepareBuilder();
        result.hasHp = true;
        result.hp_ = value;
        return this;
      }
      public Builder ClearHp() {
        PrepareBuilder();
        result.hasHp = false;
        result.hp_ = 0;
        return this;
      }
      
      public bool HasMp {
        get { return result.hasMp; }
      }
      public int Mp {
        get { return result.Mp; }
        set { SetMp(value); }
      }
      public Builder SetMp(int value) {
        PrepareBuilder();
        result.hasMp = true;
        result.mp_ = value;
        return this;
      }
      public Builder ClearMp() {
        PrepareBuilder();
        result.hasMp = false;
        result.mp_ = 0;
        return this;
      }
    }
    static C2S_UPDATE_PLAYER() {
      object.ReferenceEquals(global::Protoc.Main.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class C2S_UPDATE_ENTITY : pb::GeneratedMessage<C2S_UPDATE_ENTITY, C2S_UPDATE_ENTITY.Builder> {
    private C2S_UPDATE_ENTITY() { }
    private static readonly C2S_UPDATE_ENTITY defaultInstance = new C2S_UPDATE_ENTITY().MakeReadOnly();
    private static readonly string[] _c2SUPDATEENTITYFieldNames = new string[] { "id", "x", "y", "z" };
    private static readonly uint[] _c2SUPDATEENTITYFieldTags = new uint[] { 8, 16, 24, 32 };
    public static C2S_UPDATE_ENTITY DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override C2S_UPDATE_ENTITY DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override C2S_UPDATE_ENTITY ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protoc.Main.internal__static_Protoc_C2S_UPDATE_ENTITY__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<C2S_UPDATE_ENTITY, C2S_UPDATE_ENTITY.Builder> InternalFieldAccessors {
      get { return global::Protoc.Main.internal__static_Protoc_C2S_UPDATE_ENTITY__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    public const int XFieldNumber = 2;
    private bool hasX;
    private int x_;
    public bool HasX {
      get { return hasX; }
    }
    public int X {
      get { return x_; }
    }
    
    public const int YFieldNumber = 3;
    private bool hasY;
    private int y_;
    public bool HasY {
      get { return hasY; }
    }
    public int Y {
      get { return y_; }
    }
    
    public const int ZFieldNumber = 4;
    private bool hasZ;
    private int z_;
    public bool HasZ {
      get { return hasZ; }
    }
    public int Z {
      get { return z_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasX) return false;
        if (!hasY) return false;
        if (!hasZ) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _c2SUPDATEENTITYFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[0], Id);
      }
      if (hasX) {
        output.WriteInt32(2, field_names[1], X);
      }
      if (hasY) {
        output.WriteInt32(3, field_names[2], Y);
      }
      if (hasZ) {
        output.WriteInt32(4, field_names[3], Z);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasX) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, X);
        }
        if (hasY) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Y);
        }
        if (hasZ) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, Z);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static C2S_UPDATE_ENTITY ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S_UPDATE_ENTITY ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S_UPDATE_ENTITY ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S_UPDATE_ENTITY ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S_UPDATE_ENTITY ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S_UPDATE_ENTITY ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static C2S_UPDATE_ENTITY ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static C2S_UPDATE_ENTITY ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static C2S_UPDATE_ENTITY ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S_UPDATE_ENTITY ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private C2S_UPDATE_ENTITY MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(C2S_UPDATE_ENTITY prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<C2S_UPDATE_ENTITY, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(C2S_UPDATE_ENTITY cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private C2S_UPDATE_ENTITY result;
      
      private C2S_UPDATE_ENTITY PrepareBuilder() {
        if (resultIsReadOnly) {
          C2S_UPDATE_ENTITY original = result;
          result = new C2S_UPDATE_ENTITY();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override C2S_UPDATE_ENTITY MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protoc.C2S_UPDATE_ENTITY.Descriptor; }
      }
      
      public override C2S_UPDATE_ENTITY DefaultInstanceForType {
        get { return global::Protoc.C2S_UPDATE_ENTITY.DefaultInstance; }
      }
      
      public override C2S_UPDATE_ENTITY BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is C2S_UPDATE_ENTITY) {
          return MergeFrom((C2S_UPDATE_ENTITY) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(C2S_UPDATE_ENTITY other) {
        if (other == global::Protoc.C2S_UPDATE_ENTITY.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasX) {
          X = other.X;
        }
        if (other.HasY) {
          Y = other.Y;
        }
        if (other.HasZ) {
          Z = other.Z;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_c2SUPDATEENTITYFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _c2SUPDATEENTITYFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 16: {
              result.hasX = input.ReadInt32(ref result.x_);
              break;
            }
            case 24: {
              result.hasY = input.ReadInt32(ref result.y_);
              break;
            }
            case 32: {
              result.hasZ = input.ReadInt32(ref result.z_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasX {
        get { return result.hasX; }
      }
      public int X {
        get { return result.X; }
        set { SetX(value); }
      }
      public Builder SetX(int value) {
        PrepareBuilder();
        result.hasX = true;
        result.x_ = value;
        return this;
      }
      public Builder ClearX() {
        PrepareBuilder();
        result.hasX = false;
        result.x_ = 0;
        return this;
      }
      
      public bool HasY {
        get { return result.hasY; }
      }
      public int Y {
        get { return result.Y; }
        set { SetY(value); }
      }
      public Builder SetY(int value) {
        PrepareBuilder();
        result.hasY = true;
        result.y_ = value;
        return this;
      }
      public Builder ClearY() {
        PrepareBuilder();
        result.hasY = false;
        result.y_ = 0;
        return this;
      }
      
      public bool HasZ {
        get { return result.hasZ; }
      }
      public int Z {
        get { return result.Z; }
        set { SetZ(value); }
      }
      public Builder SetZ(int value) {
        PrepareBuilder();
        result.hasZ = true;
        result.z_ = value;
        return this;
      }
      public Builder ClearZ() {
        PrepareBuilder();
        result.hasZ = false;
        result.z_ = 0;
        return this;
      }
    }
    static C2S_UPDATE_ENTITY() {
      object.ReferenceEquals(global::Protoc.Main.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class C2S_CommonAPI : pb::GeneratedMessage<C2S_CommonAPI, C2S_CommonAPI.Builder> {
    private C2S_CommonAPI() { }
    private static readonly C2S_CommonAPI defaultInstance = new C2S_CommonAPI().MakeReadOnly();
    private static readonly string[] _c2SCommonAPIFieldNames = new string[] { "api", "args" };
    private static readonly uint[] _c2SCommonAPIFieldTags = new uint[] { 10, 18 };
    public static C2S_CommonAPI DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override C2S_CommonAPI DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override C2S_CommonAPI ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Protoc.Main.internal__static_Protoc_C2S_CommonAPI__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<C2S_CommonAPI, C2S_CommonAPI.Builder> InternalFieldAccessors {
      get { return global::Protoc.Main.internal__static_Protoc_C2S_CommonAPI__FieldAccessorTable; }
    }
    
    public const int ApiFieldNumber = 1;
    private bool hasApi;
    private string api_ = "";
    public bool HasApi {
      get { return hasApi; }
    }
    public string Api {
      get { return api_; }
    }
    
    public const int ArgsFieldNumber = 2;
    private bool hasArgs;
    private string args_ = "";
    public bool HasArgs {
      get { return hasArgs; }
    }
    public string Args {
      get { return args_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasApi) return false;
        if (!hasArgs) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _c2SCommonAPIFieldNames;
      if (hasApi) {
        output.WriteString(1, field_names[0], Api);
      }
      if (hasArgs) {
        output.WriteString(2, field_names[1], Args);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasApi) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Api);
        }
        if (hasArgs) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Args);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static C2S_CommonAPI ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S_CommonAPI ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S_CommonAPI ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static C2S_CommonAPI ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static C2S_CommonAPI ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S_CommonAPI ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static C2S_CommonAPI ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static C2S_CommonAPI ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static C2S_CommonAPI ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static C2S_CommonAPI ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private C2S_CommonAPI MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(C2S_CommonAPI prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<C2S_CommonAPI, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(C2S_CommonAPI cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private C2S_CommonAPI result;
      
      private C2S_CommonAPI PrepareBuilder() {
        if (resultIsReadOnly) {
          C2S_CommonAPI original = result;
          result = new C2S_CommonAPI();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override C2S_CommonAPI MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Protoc.C2S_CommonAPI.Descriptor; }
      }
      
      public override C2S_CommonAPI DefaultInstanceForType {
        get { return global::Protoc.C2S_CommonAPI.DefaultInstance; }
      }
      
      public override C2S_CommonAPI BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is C2S_CommonAPI) {
          return MergeFrom((C2S_CommonAPI) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(C2S_CommonAPI other) {
        if (other == global::Protoc.C2S_CommonAPI.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasApi) {
          Api = other.Api;
        }
        if (other.HasArgs) {
          Args = other.Args;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_c2SCommonAPIFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _c2SCommonAPIFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasApi = input.ReadString(ref result.api_);
              break;
            }
            case 18: {
              result.hasArgs = input.ReadString(ref result.args_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasApi {
        get { return result.hasApi; }
      }
      public string Api {
        get { return result.Api; }
        set { SetApi(value); }
      }
      public Builder SetApi(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasApi = true;
        result.api_ = value;
        return this;
      }
      public Builder ClearApi() {
        PrepareBuilder();
        result.hasApi = false;
        result.api_ = "";
        return this;
      }
      
      public bool HasArgs {
        get { return result.hasArgs; }
      }
      public string Args {
        get { return result.Args; }
        set { SetArgs(value); }
      }
      public Builder SetArgs(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasArgs = true;
        result.args_ = value;
        return this;
      }
      public Builder ClearArgs() {
        PrepareBuilder();
        result.hasArgs = false;
        result.args_ = "";
        return this;
      }
    }
    static C2S_CommonAPI() {
      object.ReferenceEquals(global::Protoc.Main.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
